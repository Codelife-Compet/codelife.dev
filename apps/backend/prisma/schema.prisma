generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id              String    @id @default(uuid())
  name            String
  profile_picture String?
  email           String    @unique
  password        String?
  role            String    @default("USER")
  github_token    String?   @unique
  google_token    String?   @unique
  facebook_token  String?   @unique
  created_at      DateTime  @default(now())
  updated_at      DateTime? @updatedAt

  @@map("users") // configuração do model || troca o nome da tabela que vai ser salva para "users"
}

model UserCode {
  id       String  @id @default(uuid())
  userName String
  code     String? @default("")
  Slide    Slide   @relation(fields: [slideId], references: [id])
  slideId  String  @unique

  @@map("userCodes")
}

model Video {
  id               String @id @default(uuid())
  videoKey         String
  distributionName String

  slideId String @unique
  Slide   Slide  @relation(fields: [slideId], references: [id])

  @@map("videos")
}

model Slide {
  id          String @id @default(uuid())
  name        String
  description String
  theme       String
  baseCode    String

  userCodes UserCode[]
  video     Video?

  Level   Level   @relation(fields: [levelId], references: [id])
  levelId String  @unique
  videoId String?

  @@map("slides")
}

model Level {
  id          String @id @default(uuid())
  name        String
  description String
  theme       String

  slides Slide[]

  Island   Island @relation(fields: [islandId], references: [id])
  islandId String @unique

  @@map("levels")
}

model Island {
  id          String @id @default(uuid())
  name        String @unique
  description String
  theme       String

  levels Level[]

  @@map("islands")
}
