'use-client'
import Head from 'next/head'
import Footer from '@/components/Footer'
import { Box, Switch, Text } from '@codelife-ui/react'
import { useTheme } from 'next-themes'
import React, { useEffect, useState } from 'react'
import { FaMoon, FaSun } from 'react-icons/fa'
import { useRouter } from 'next/router'
import { useTranslation } from 'react-i18next'
interface LayoutProps {}
const Layout: React.FC<React.PropsWithChildren<LayoutProps>> = ({
  children,
}) => {
  const { locale } = useRouter()
  const { i18n } = useTranslation()
  const { theme, systemTheme, setTheme } = useTheme()
  const [hydrated, setHydrated] = useState(false)
  useEffect(() => {
    setHydrated(true)
  }, [])
  useEffect(() => {
    i18n.changeLanguage(locale)
  }, [locale, i18n])
  useEffect(() => {
    const storagedTheme = localStorage.getItem('codelife-theme')
    if (!systemTheme || theme === systemTheme || storagedTheme !== systemTheme)
      return
    setTheme(systemTheme)
  }, [systemTheme, setTheme, theme])
  useEffect(() => {
    const storagedTheme = localStorage.getItem('codelife-theme')
    if (storagedTheme && storagedTheme !== theme) {
      setTheme(storagedTheme)
    }
  }, [])
  useEffect(() => {
    if (!theme) return
    localStorage.setItem('codelife-theme', theme)
  }, [theme])
  const toggleTheme = () => {
    const currentTheme = theme === 'dark' ? 'light' : 'dark'
    setTheme(currentTheme)
  }
  return (
    <>
      <Head>
        <title>Codelife</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {hydrated && (
        <>
          <Box
            css={{ display: 'flex' }}
            elevation={'1'}
            className="bg-codelife-primary-500/5"
          >
            {' '}
            {/* Navbar goes here... */}
            <Switch
              id="toggleTheme"
              onCheckedChange={toggleTheme}
              isActive={theme === 'dark'}
              CheckedIcon={FaMoon}
              UncheckedIcon={FaSun}
            />
            <Text
              as={'label'}
              css={{ paddingInline: '$4' }}
              htmlFor="toggleTheme"
            >
              Toggle Theme
            </Text>
          </Box>
          <main className="mb-20">{children}</main>
          <Footer />
        </>
      )}
    </>
  )
}
export default Layout
